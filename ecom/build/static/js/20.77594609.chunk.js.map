{"version":3,"sources":["pages/other/Cart.js"],"names":["connect","state","cartItems","cartData","currency","currencyData","profile","firebase","dispatch","addToCart","item","addToast","quantityCount","decreaseQuantity","deleteFromCart","deleteAllFromCart","location","useState","useToasts","pathname","cartTotalPrice","name","content","to","process","headerTop","className","length","map","cartItem","key","discountedPrice","getDiscountPrice","price","discount","finalProductPrice","currencyRate","toFixed","finalDiscountedPrice","isEmpty","quantity","minQuant","priceDis","id","src","image","alt","selectedProductColor","selectedProductSize","currencySymbol","onClick","type","value","readOnly","disabled","undefined","cartItemStock","required"],"mappings":"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","file":"static/js/20.77594609.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React, { Fragment, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport MetaTags from \"react-meta-tags\";\r\nimport { BreadcrumbsItem } from \"react-breadcrumbs-dynamic\";\r\nimport { connect } from \"react-redux\";\r\nimport { getDiscountPrice } from \"../../helpers/product\";\r\nimport {\r\n  addToCart,\r\n  decreaseQuantity,\r\n  deleteFromCart,\r\n  cartItemStock,\r\n  deleteAllFromCart,\r\n} from \"../../redux/actions/cartActions\";\r\nimport LayoutOne from \"../../layouts/LayoutOne\";\r\nimport Breadcrumb from \"../../wrappers/breadcrumb/Breadcrumb\";\r\n\r\nconst Cart = ({\r\n  location,\r\n  cartItems,\r\n  currency,\r\n  decreaseQuantity,\r\n  addToCart,\r\n  deleteFromCart,\r\n  deleteAllFromCart,\r\n  profile,\r\n}) => {\r\n  const [quantityCount] = useState(1);\r\n  const { addToast } = useToasts();\r\n  const { pathname } = location;\r\n  let cartTotalPrice = 0;\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaTags>\r\n        <title>Flone | Cart</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Cart page of flone react minimalist eCommerce template.\"\r\n        />\r\n      </MetaTags>\r\n\r\n      <BreadcrumbsItem to={process.env.PUBLIC_URL + \"/\"}>Home</BreadcrumbsItem>\r\n      <BreadcrumbsItem to={process.env.PUBLIC_URL + pathname}>\r\n        Cart\r\n      </BreadcrumbsItem>\r\n\r\n      <LayoutOne headerTop=\"visible\">\r\n        {/* breadcrumb */}\r\n        <Breadcrumb />\r\n        <div className=\"cart-main-area pt-90 pb-100\">\r\n          <div className=\"container\">\r\n            {cartItems && cartItems.length >= 1 ? (\r\n              <Fragment>\r\n                <h3 className=\"cart-page-title\">Your cart items</h3>\r\n                <div className=\"row\">\r\n                  <div className=\"col-12\">\r\n                    <div className=\"table-content table-responsive cart-table-content\">\r\n                      <table>\r\n                        <thead>\r\n                          <tr>\r\n                            <th>Image</th>\r\n                            <th>Product Name</th>\r\n                            <th>Unit Price</th>\r\n                            <th>Qty</th>\r\n                            <th>Subtotal</th>\r\n                            <th>action</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {cartItems.map((cartItem, key) => {\r\n                            const discountedPrice = getDiscountPrice(\r\n                              cartItem.price,\r\n                              cartItem.discount\r\n                            );\r\n                            let finalProductPrice = (\r\n                              cartItem.price * currency.currencyRate\r\n                            ).toFixed(2);\r\n                            const finalDiscountedPrice = (\r\n                              discountedPrice * currency.currencyRate\r\n                            ).toFixed(2);\r\n                            let quantAdd;\r\n                            if (!profile.isEmpty) {\r\n                              if (cartItem.quantity < cartItem.minQuant) {\r\n                                addToCart(\r\n                                  cartItem,\r\n                                  addToast,\r\n                                  cartItem.minQuant - cartItem.quantity\r\n                                );\r\n                              }\r\n                              quantAdd = cartItem.minQuant;\r\n                              finalProductPrice = +(\r\n                                cartItem.priceDis * currency.currencyRate\r\n                              ).toFixed(2);\r\n                            }\r\n                            discountedPrice != null && profile.isEmpty\r\n                              ? (cartTotalPrice +=\r\n                                  finalDiscountedPrice * cartItem.quantity)\r\n                              : (cartTotalPrice +=\r\n                                  finalProductPrice * cartItem.quantity);\r\n                            return (\r\n                              <tr key={key}>\r\n                                <td className=\"product-thumbnail\">\r\n                                  <Link\r\n                                    to={\r\n                                      process.env.PUBLIC_URL +\r\n                                      \"/product/\" +\r\n                                      cartItem.id\r\n                                    }\r\n                                  >\r\n                                    <img\r\n                                      className=\"img-fluid\"\r\n                                      src={\r\n                                        process.env.PUBLIC_URL +\r\n                                        cartItem.image[0]\r\n                                      }\r\n                                      alt=\"\"\r\n                                    />\r\n                                  </Link>\r\n                                </td>\r\n\r\n                                <td className=\"product-name\">\r\n                                  <Link\r\n                                    to={\r\n                                      process.env.PUBLIC_URL +\r\n                                      \"/product/\" +\r\n                                      cartItem.id\r\n                                    }\r\n                                  >\r\n                                    {cartItem.name}\r\n                                  </Link>\r\n                                  {cartItem.selectedProductColor &&\r\n                                  cartItem.selectedProductSize ? (\r\n                                    <div className=\"cart-item-variation\">\r\n                                      <span>\r\n                                        Color: {cartItem.selectedProductColor}\r\n                                      </span>\r\n                                      <span>\r\n                                        Size: {cartItem.selectedProductSize}\r\n                                      </span>\r\n                                    </div>\r\n                                  ) : (\r\n                                    \"\"\r\n                                  )}\r\n                                </td>\r\n\r\n                                <td className=\"product-price-cart\">\r\n                                  {discountedPrice !== null &&\r\n                                  profile.isEmpty ? (\r\n                                    <Fragment>\r\n                                      <span className=\"amount old\">\r\n                                        {currency.currencySymbol +\r\n                                          finalProductPrice}\r\n                                      </span>\r\n                                      <span className=\"amount\">\r\n                                        {currency.currencySymbol +\r\n                                          finalDiscountedPrice}\r\n                                      </span>\r\n                                    </Fragment>\r\n                                  ) : (\r\n                                    <span className=\"amount\">\r\n                                      {currency.currencySymbol +\r\n                                        finalProductPrice}\r\n                                    </span>\r\n                                  )}\r\n                                </td>\r\n\r\n                                <td className=\"product-quantity\">\r\n                                  <div className=\"cart-plus-minus\">\r\n                                    <button\r\n                                      className=\"dec qtybutton\"\r\n                                      onClick={() =>\r\n                                        decreaseQuantity(cartItem, addToast)\r\n                                      }\r\n                                    >\r\n                                      -\r\n                                    </button>\r\n                                    <input\r\n                                      className=\"cart-plus-minus-box\"\r\n                                      type=\"text\"\r\n                                      value={cartItem.quantity}\r\n                                      readOnly\r\n                                    />\r\n                                    <button\r\n                                      className=\"inc qtybutton\"\r\n                                      onClick={() =>\r\n                                        addToCart(\r\n                                          cartItem,\r\n                                          addToast,\r\n                                          quantityCount\r\n                                        )\r\n                                      }\r\n                                      disabled={\r\n                                        cartItem !== undefined &&\r\n                                        cartItem.quantity &&\r\n                                        cartItem.quantity >=\r\n                                          cartItemStock(\r\n                                            cartItem,\r\n                                            cartItem.selectedProductColor,\r\n                                            cartItem.selectedProductSize\r\n                                          )\r\n                                      }\r\n                                    >\r\n                                      +\r\n                                    </button>\r\n                                  </div>\r\n                                </td>\r\n                                <td className=\"product-subtotal\">\r\n                                  {discountedPrice !== null && profile.isEmpty\r\n                                    ? currency.currencySymbol +\r\n                                      (\r\n                                        finalDiscountedPrice * cartItem.quantity\r\n                                      ).toFixed(2)\r\n                                    : currency.currencySymbol +\r\n                                      (\r\n                                        finalProductPrice * cartItem.quantity\r\n                                      ).toFixed(2)}\r\n                                </td>\r\n\r\n                                <td className=\"product-remove\">\r\n                                  <button\r\n                                    onClick={() =>\r\n                                      deleteFromCart(cartItem, addToast)\r\n                                    }\r\n                                  >\r\n                                    <i className=\"fa fa-times\"></i>\r\n                                  </button>\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          })}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <div className=\"cart-shiping-update-wrapper\">\r\n                      <div className=\"cart-shiping-update\">\r\n                        <Link\r\n                          to={process.env.PUBLIC_URL + \"/shop-grid-standard\"}\r\n                        >\r\n                          Continue Shopping\r\n                        </Link>\r\n                      </div>\r\n                      <div className=\"cart-clear\">\r\n                        <button onClick={() => deleteAllFromCart(addToast)}>\r\n                          Clear Shopping Cart\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-4 col-md-6\">\r\n                    <div className=\"discount-code-wrapper\">\r\n                      <div className=\"title-wrap\">\r\n                        <h4 className=\"cart-bottom-title section-bg-gray\">\r\n                          Use Coupon Code\r\n                        </h4>\r\n                      </div>\r\n                      <div className=\"discount-code\">\r\n                        <p>Enter your coupon code if you have one.</p>\r\n                        <form>\r\n                          <input type=\"text\" required name=\"name\" />\r\n                          <button className=\"cart-btn-2\" type=\"submit\">\r\n                            Apply Coupon\r\n                          </button>\r\n                        </form>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-lg-4 col-md-12\">\r\n                    <div className=\"grand-totall\">\r\n                      <div className=\"title-wrap\">\r\n                        <h4 className=\"cart-bottom-title section-bg-gary-cart\">\r\n                          Cart Total\r\n                        </h4>\r\n                      </div>\r\n                      <h5>\r\n                        Total products{\" \"}\r\n                        <span>\r\n                          {currency.currencySymbol + cartTotalPrice.toFixed(2)}\r\n                        </span>\r\n                      </h5>\r\n\r\n                      <h4 className=\"grand-totall-title\">\r\n                        Grand Total{\" \"}\r\n                        <span>\r\n                          {currency.currencySymbol + cartTotalPrice.toFixed(2)}\r\n                        </span>\r\n                      </h4>\r\n                      <Link to={process.env.PUBLIC_URL + \"/checkout\"}>\r\n                        Proceed to Checkout\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Fragment>\r\n            ) : (\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-12\">\r\n                  <div className=\"item-empty-area text-center\">\r\n                    <div className=\"item-empty-area__icon mb-30\">\r\n                      <i className=\"pe-7s-cart\"></i>\r\n                    </div>\r\n                    <div className=\"item-empty-area__text\">\r\n                      No items found in cart <br />{\" \"}\r\n                      <Link to={process.env.PUBLIC_URL + \"/shop-grid-standard\"}>\r\n                        Shop Now\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </LayoutOne>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nCart.propTypes = {\r\n  addToCart: PropTypes.func,\r\n  cartItems: PropTypes.array,\r\n  currency: PropTypes.object,\r\n  decreaseQuantity: PropTypes.func,\r\n  location: PropTypes.object,\r\n  deleteAllFromCart: PropTypes.func,\r\n  deleteFromCart: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cartItems: state.cartData,\r\n    currency: state.currencyData,\r\n    profile: state.firebase.profile,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addToCart: (item, addToast, quantityCount) => {\r\n      dispatch(addToCart(item, addToast, quantityCount));\r\n    },\r\n    decreaseQuantity: (item, addToast) => {\r\n      dispatch(decreaseQuantity(item, addToast));\r\n    },\r\n    deleteFromCart: (item, addToast) => {\r\n      dispatch(deleteFromCart(item, addToast));\r\n    },\r\n    deleteAllFromCart: (addToast) => {\r\n      dispatch(deleteAllFromCart(addToast));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\r\n"],"sourceRoot":""}