{"ast":null,"code":"var _jsxFileName = \"/Users/jorgeabdo/Desktop/Hale/admin/src/views/promocion/sliders/sliderForm.js\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Form, Input, Row, Upload } from \"antd\";\nimport firebase from \"firebase\";\nimport { ContainerOutlined, UploadOutlined } from \"@ant-design/icons\";\n\nconst SliderForm = ({\n  slider = {},\n  isEditing = false\n}) => {\n  const [sliderImage, setSliderImage] = useState(slider.image || []);\n  const history = useHistory();\n\n  const firebaseStorage = info => {\n    const storage = firebase.storage();\n    console.log(info.image.file);\n    const uploadTaskPDF = storage.ref(`sliders/${info.image.file.uid}`).put(info.image.file);\n    uploadTaskPDF.on(\"state_changed\", snapshot => {// progress function ...\n    }, error => {\n      // Error function ...\n      console.error(error);\n    }, // eslint-disable-next-line no-loop-func\n    () => {\n      // complete function ...\n      storage.ref(\"sliders\").child(info.image.file.uid).getDownloadURL().then(urlPDF => {\n        const db = firebase.firestore();\n        db.collection(\"Sliders\").add({\n          image: urlPDF,\n          title: info.title,\n          subtitle: info.subtitle,\n          url: \"/shop-grid-standard\"\n        }).then(() => {\n          history.push(\"/sliders\");\n        }).catch(err => {\n          console.error(err);\n        });\n      });\n    });\n  };\n\n  const onFinish = info => {\n    console.log(info);\n    firebaseStorage(info);\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    layout: \"vertical\",\n    onFinish: onFinish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"title\",\n    label: \"Title\",\n    initialValue: slider.title || \"\",\n    rules: [{\n      required: true,\n      message: \"Please input slider title!\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(ContainerOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 19\n      }\n    }),\n    placeholder: \"Please input slider title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"subtitle\",\n    label: \"Subtitle\",\n    initialValue: slider.subtitle || \"\",\n    rules: [{\n      required: true,\n      message: \"Please input slider subtitle!\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(ContainerOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 19\n      }\n    }),\n    placeholder: \"Please input slider subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"image\",\n    label: \"Image\",\n    rules: [{\n      required: true,\n      message: \"Please input slider image!\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Upload, {\n    beforeUpload: file => {\n      setSliderImage([file]);\n      return false;\n    },\n    onRemove: () => {\n      setSliderImage([]);\n    },\n    listType: \"picture\",\n    accept: \"image/*\",\n    fileList: sliderImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: sliderImage.length !== 0,\n    icon: /*#__PURE__*/React.createElement(UploadOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 61\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, \"Upload\"))), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    justify: \"end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n};\n\nexport default SliderForm;","map":{"version":3,"sources":["/Users/jorgeabdo/Desktop/Hale/admin/src/views/promocion/sliders/sliderForm.js"],"names":["React","useState","useHistory","Button","Form","Input","Row","Upload","firebase","ContainerOutlined","UploadOutlined","SliderForm","slider","isEditing","sliderImage","setSliderImage","image","history","firebaseStorage","info","storage","console","log","file","uploadTaskPDF","ref","uid","put","on","snapshot","error","child","getDownloadURL","then","urlPDF","db","firestore","collection","add","title","subtitle","url","push","catch","err","onFinish","required","message","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,GAA9B,EAAmCC,MAAnC,QAAiD,MAAjD;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,iBAAT,EAA4BC,cAA5B,QAAkD,mBAAlD;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,MAAM,GAAG,EAAX;AAAeC,EAAAA,SAAS,GAAG;AAA3B,CAAD,KAAwC;AACzD,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAACW,MAAM,CAACI,KAAP,IAAgB,EAAjB,CAA9C;AAEA,QAAMC,OAAO,GAAGf,UAAU,EAA1B;;AAEA,QAAMgB,eAAe,GAAIC,IAAD,IAAU;AAChC,UAAMC,OAAO,GAAGZ,QAAQ,CAACY,OAAT,EAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACH,KAAL,CAAWO,IAAvB;AACA,UAAMC,aAAa,GAAGJ,OAAO,CAC1BK,GADmB,CACd,WAAUN,IAAI,CAACH,KAAL,CAAWO,IAAX,CAAgBG,GAAI,EADhB,EAEnBC,GAFmB,CAEfR,IAAI,CAACH,KAAL,CAAWO,IAFI,CAAtB;AAGAC,IAAAA,aAAa,CAACI,EAAd,CACE,eADF,EAEGC,QAAD,IAAc,CACZ;AACD,KAJH,EAKGC,KAAD,IAAW;AACT;AACAT,MAAAA,OAAO,CAACS,KAAR,CAAcA,KAAd;AACD,KARH,EASE;AACA,UAAM;AACJ;AACAV,MAAAA,OAAO,CACJK,GADH,CACO,SADP,EAEGM,KAFH,CAESZ,IAAI,CAACH,KAAL,CAAWO,IAAX,CAAgBG,GAFzB,EAGGM,cAHH,GAIGC,IAJH,CAISC,MAAD,IAAY;AAChB,cAAMC,EAAE,GAAG3B,QAAQ,CAAC4B,SAAT,EAAX;AACAD,QAAAA,EAAE,CAACE,UAAH,CAAc,SAAd,EACGC,GADH,CACO;AACHtB,UAAAA,KAAK,EAAEkB,MADJ;AAEHK,UAAAA,KAAK,EAAEpB,IAAI,CAACoB,KAFT;AAGHC,UAAAA,QAAQ,EAAErB,IAAI,CAACqB,QAHZ;AAIHC,UAAAA,GAAG,EAAE;AAJF,SADP,EAOGR,IAPH,CAOQ,MAAM;AACVhB,UAAAA,OAAO,CAACyB,IAAR,CAAa,UAAb;AACD,SATH,EAUGC,KAVH,CAUUC,GAAD,IAAS;AACdvB,UAAAA,OAAO,CAACS,KAAR,CAAcc,GAAd;AACD,SAZH;AAaD,OAnBH;AAoBD,KAhCH;AAkCD,GAxCD;;AA0CA,QAAMC,QAAQ,GAAI1B,IAAD,IAAU;AACzBE,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAD,IAAAA,eAAe,CAACC,IAAD,CAAf;AACD,GAHD;;AAKA,sBACE,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAC,UAAb;AAAwB,IAAA,QAAQ,EAAE0B,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,IAAN;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,KAAK,EAAC,OAFR;AAGE,IAAA,YAAY,EAAEjC,MAAM,CAAC2B,KAAP,IAAgB,EAHhC;AAIE,IAAA,KAAK,EAAE,CACL;AACEO,MAAAA,QAAQ,EAAE,IADZ;AAEEC,MAAAA,OAAO,EAAE;AAFX,KADK,CAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAWE,oBAAC,KAAD;AACE,IAAA,MAAM,eAAE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADV;AAEE,IAAA,WAAW,EAAC,2BAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF,eAiBE,oBAAC,IAAD,CAAM,IAAN;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,KAAK,EAAC,UAFR;AAGE,IAAA,YAAY,EAAEnC,MAAM,CAAC4B,QAAP,IAAmB,EAHnC;AAIE,IAAA,KAAK,EAAE,CACL;AACEM,MAAAA,QAAQ,EAAE,IADZ;AAEEC,MAAAA,OAAO,EAAE;AAFX,KADK,CAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAWE,oBAAC,KAAD;AACE,IAAA,MAAM,eAAE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADV;AAEE,IAAA,WAAW,EAAC,8BAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CAjBF,eAiCE,oBAAC,IAAD,CAAM,IAAN;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,KAAK,EAAC,OAFR;AAGE,IAAA,KAAK,EAAE,CACL;AACED,MAAAA,QAAQ,EAAE,IADZ;AAEEC,MAAAA,OAAO,EAAE;AAFX,KADK,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUE,oBAAC,MAAD;AACE,IAAA,YAAY,EAAGxB,IAAD,IAAU;AACtBR,MAAAA,cAAc,CAAC,CAACQ,IAAD,CAAD,CAAd;AACA,aAAO,KAAP;AACD,KAJH;AAKE,IAAA,QAAQ,EAAE,MAAM;AACdR,MAAAA,cAAc,CAAC,EAAD,CAAd;AACD,KAPH;AAQE,IAAA,QAAQ,EAAC,SARX;AASE,IAAA,MAAM,EAAC,SATT;AAUE,IAAA,QAAQ,EAAED,WAVZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAYE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEA,WAAW,CAACkC,MAAZ,KAAuB,CAAzC;AAA4C,IAAA,IAAI,eAAE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,CAVF,CAjCF,eA4DE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF,CA5DF,CADF;AAsED,CA1HD;;AA4HA,eAAerC,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Form, Input, Row, Upload } from \"antd\";\nimport firebase from \"firebase\";\nimport { ContainerOutlined, UploadOutlined } from \"@ant-design/icons\";\n\nconst SliderForm = ({ slider = {}, isEditing = false }) => {\n  const [sliderImage, setSliderImage] = useState(slider.image || []);\n\n  const history = useHistory();\n\n  const firebaseStorage = (info) => {\n    const storage = firebase.storage();\n    console.log(info.image.file);\n    const uploadTaskPDF = storage\n      .ref(`sliders/${info.image.file.uid}`)\n      .put(info.image.file);\n    uploadTaskPDF.on(\n      \"state_changed\",\n      (snapshot) => {\n        // progress function ...\n      },\n      (error) => {\n        // Error function ...\n        console.error(error);\n      },\n      // eslint-disable-next-line no-loop-func\n      () => {\n        // complete function ...\n        storage\n          .ref(\"sliders\")\n          .child(info.image.file.uid)\n          .getDownloadURL()\n          .then((urlPDF) => {\n            const db = firebase.firestore();\n            db.collection(\"Sliders\")\n              .add({\n                image: urlPDF,\n                title: info.title,\n                subtitle: info.subtitle,\n                url: \"/shop-grid-standard\",\n              })\n              .then(() => {\n                history.push(\"/sliders\");\n              })\n              .catch((err) => {\n                console.error(err);\n              });\n          });\n      }\n    );\n  };\n\n  const onFinish = (info) => {\n    console.log(info);\n    firebaseStorage(info);\n  };\n\n  return (\n    <Form layout=\"vertical\" onFinish={onFinish}>\n      <Form.Item\n        name=\"title\"\n        label=\"Title\"\n        initialValue={slider.title || \"\"}\n        rules={[\n          {\n            required: true,\n            message: \"Please input slider title!\",\n          },\n        ]}\n      >\n        <Input\n          prefix={<ContainerOutlined />}\n          placeholder=\"Please input slider title\"\n        />\n      </Form.Item>\n      <Form.Item\n        name=\"subtitle\"\n        label=\"Subtitle\"\n        initialValue={slider.subtitle || \"\"}\n        rules={[\n          {\n            required: true,\n            message: \"Please input slider subtitle!\",\n          },\n        ]}\n      >\n        <Input\n          prefix={<ContainerOutlined />}\n          placeholder=\"Please input slider subtitle\"\n        />\n      </Form.Item>\n      <Form.Item\n        name=\"image\"\n        label=\"Image\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input slider image!\",\n          },\n        ]}\n      >\n        <Upload\n          beforeUpload={(file) => {\n            setSliderImage([file]);\n            return false;\n          }}\n          onRemove={() => {\n            setSliderImage([]);\n          }}\n          listType=\"picture\"\n          accept=\"image/*\"\n          fileList={sliderImage}\n        >\n          <Button disabled={sliderImage.length !== 0} icon={<UploadOutlined />}>\n            Upload\n          </Button>\n        </Upload>\n      </Form.Item>\n      <Form.Item>\n        <Row justify=\"end\">\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Row>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default SliderForm;\n"]},"metadata":{},"sourceType":"module"}