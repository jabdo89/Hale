{"ast":null,"code":"var _jsxFileName = \"/Users/jorgeabdo/Desktop/Hale/admin/src/views/clientes/index.js\";\nimport React from \"react\";\nimport Container from \"../../common/container\";\nimport { PageHeader, Table } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nconst columns = [{\n  title: \"Name\",\n  key: \"firstName\",\n  render: (text, record) => record.firstName + \" \" + record.lastName\n}, {\n  title: \"Email\",\n  dataIndex: \"email\",\n  key: \"email\"\n}, {\n  title: \"Phone\",\n  dataIndex: \"phone\",\n  key: \"phone\"\n}, {\n  title: \"Total Spent\",\n  dataIndex: \"totalSpent\",\n  key: \"totalSpent\"\n}];\n\nconst Clientes = ({\n  ordersData: clientsData\n}) => {\n  if (clientsData === undefined) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PageHeader, {\n    title: \"Clientes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    rowKey: \"id\",\n    columns: columns,\n    dataSource: clientsData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst mapStateToProps = state => ({\n  ordersData: state.firestore.ordered.Clients\n});\n\nexport default compose(connect(mapStateToProps), firestoreConnect([{\n  collection: \"Clients\"\n}]))(Clientes);","map":{"version":3,"sources":["/Users/jorgeabdo/Desktop/Hale/admin/src/views/clientes/index.js"],"names":["React","Container","PageHeader","Table","connect","firestoreConnect","compose","columns","title","key","render","text","record","firstName","lastName","dataIndex","Clientes","ordersData","clientsData","undefined","mapStateToProps","state","firestore","ordered","Clients","collection"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,UAAT,EAAqBC,KAArB,QAAkC,MAAlC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB;AAEA,MAAMC,OAAO,GAAG,CACd;AACEC,EAAAA,KAAK,EAAE,MADT;AAEEC,EAAAA,GAAG,EAAE,WAFP;AAGEC,EAAAA,MAAM,EAAE,CAACC,IAAD,EAAOC,MAAP,KAAkBA,MAAM,CAACC,SAAP,GAAmB,GAAnB,GAAyBD,MAAM,CAACE;AAH5D,CADc,EAMd;AACEN,EAAAA,KAAK,EAAE,OADT;AAEEO,EAAAA,SAAS,EAAE,OAFb;AAGEN,EAAAA,GAAG,EAAE;AAHP,CANc,EAWd;AACED,EAAAA,KAAK,EAAE,OADT;AAEEO,EAAAA,SAAS,EAAE,OAFb;AAGEN,EAAAA,GAAG,EAAE;AAHP,CAXc,EAgBd;AACED,EAAAA,KAAK,EAAE,aADT;AAEEO,EAAAA,SAAS,EAAE,YAFb;AAGEN,EAAAA,GAAG,EAAE;AAHP,CAhBc,CAAhB;;AAuBA,MAAMO,QAAQ,GAAG,CAAC;AAAEC,EAAAA,UAAU,EAAEC;AAAd,CAAD,KAAiC;AAChD,MAAIA,WAAW,KAAKC,SAApB,EAA+B;AAC7B,WAAO,IAAP;AACD;;AACD,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAC,IAAd;AAAmB,IAAA,OAAO,EAAEZ,OAA5B;AAAqC,IAAA,UAAU,EAAEW,WAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF;AAQD,CAZD;;AAcA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCJ,EAAAA,UAAU,EAAEI,KAAK,CAACC,SAAN,CAAgBC,OAAhB,CAAwBC;AADF,CAAZ,CAAxB;;AAIA,eAAelB,OAAO,CACpBF,OAAO,CAACgB,eAAD,CADa,EAEpBf,gBAAgB,CAAC,CAAC;AAAEoB,EAAAA,UAAU,EAAE;AAAd,CAAD,CAAD,CAFI,CAAP,CAGbT,QAHa,CAAf","sourcesContent":["import React from \"react\";\nimport Container from \"../../common/container\";\nimport { PageHeader, Table } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\n\nconst columns = [\n  {\n    title: \"Name\",\n    key: \"firstName\",\n    render: (text, record) => record.firstName + \" \" + record.lastName,\n  },\n  {\n    title: \"Email\",\n    dataIndex: \"email\",\n    key: \"email\",\n  },\n  {\n    title: \"Phone\",\n    dataIndex: \"phone\",\n    key: \"phone\",\n  },\n  {\n    title: \"Total Spent\",\n    dataIndex: \"totalSpent\",\n    key: \"totalSpent\",\n  },\n];\n\nconst Clientes = ({ ordersData: clientsData }) => {\n  if (clientsData === undefined) {\n    return null;\n  }\n  return (\n    <div>\n      <PageHeader title=\"Clientes\" />\n      <Container>\n        <Table rowKey=\"id\" columns={columns} dataSource={clientsData} />\n      </Container>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  ordersData: state.firestore.ordered.Clients,\n});\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{ collection: \"Clients\" }])\n)(Clientes);\n"]},"metadata":{},"sourceType":"module"}