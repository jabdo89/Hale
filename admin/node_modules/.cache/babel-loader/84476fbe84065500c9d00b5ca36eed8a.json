{"ast":null,"code":"var _jsxFileName = \"/Users/jorgeabdo/Desktop/Hale/admin/src/views/inventario/index.js\";\nimport React, { useState } from \"react\";\nimport { Button, Form, InputNumber, Modal, PageHeader, Row, Table, Tag } from \"antd\";\nimport { EditOutlined } from '@ant-design/icons';\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport Container from \"../../common/container\";\n\nconst Inventario = ({\n  productData\n}) => {\n  const [showEdit, setShowEdit] = useState(false);\n  const [selectedItem, setSelectedItem] = useState({});\n  const columns = [{\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\"\n  }, {\n    title: \"Category\",\n    dataIndex: \"category\",\n    key: \"category\",\n    render: (text, record) => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, record.category.map((category, i) => /*#__PURE__*/React.createElement(Tag, {\n      key: i,\n      color: \"magenta\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }\n    }, category)))\n  }, {\n    title: \"Stock\",\n    dataIndex: \"stock\",\n    key: \"stock\"\n  }, {\n    title: \"Edit\",\n    render: (text, record) => /*#__PURE__*/React.createElement(Button, {\n      onClick: () => editInventory(record),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(EditOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }))\n  }];\n\n  const editInventory = record => {\n    setShowEdit(true);\n    setSelectedItem(record);\n  };\n\n  const onFinish = values => {\n    console.log(values);\n    setShowEdit(false);\n  };\n\n  if (productData === undefined) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PageHeader, {\n    title: \"Inventario\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    title: \"Edit inventory\",\n    visible: showEdit,\n    footer: null,\n    onCancel: () => setShowEdit(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onFinish: onFinish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"stock\",\n    label: \"Stock\",\n    initialValue: selectedItem.stock || \"\",\n    rules: [{\n      required: true,\n      message: \"Please input stock!\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(InputNumber, {\n    style: {\n      minWidth: 150\n    },\n    min: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    justify: \"end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 33\n    }\n  }, \"Submit\"))))), /*#__PURE__*/React.createElement(Table, {\n    rowKey: \"id\",\n    columns: columns,\n    dataSource: productData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  })));\n};\n\nconst mapStateToProps = state => ({\n  productData: state.firestore.ordered.Products\n});\n\nexport default compose(connect(mapStateToProps), firestoreConnect([{\n  collection: \"Products\"\n}]))(Inventario);","map":{"version":3,"sources":["/Users/jorgeabdo/Desktop/Hale/admin/src/views/inventario/index.js"],"names":["React","useState","Button","Form","InputNumber","Modal","PageHeader","Row","Table","Tag","EditOutlined","connect","firestoreConnect","compose","Container","Inventario","productData","showEdit","setShowEdit","selectedItem","setSelectedItem","columns","title","dataIndex","key","render","text","record","category","map","i","editInventory","onFinish","values","console","log","undefined","stock","required","message","minWidth","mapStateToProps","state","firestore","ordered","Products","collection"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,WAAvB,EAAoCC,KAApC,EAA2CC,UAA3C,EAAuDC,GAAvD,EAA4DC,KAA5D,EAAmEC,GAAnE,QAA8E,MAA9E;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqB;AAEpC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACkB,YAAD,EAAeC,eAAf,IAAkCnB,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAMoB,OAAO,GAAG,CACZ;AACIC,IAAAA,KAAK,EAAE,MADX;AAEIC,IAAAA,SAAS,EAAE,MAFf;AAGIC,IAAAA,GAAG,EAAE;AAHT,GADY,EAMZ;AACIF,IAAAA,KAAK,EAAE,UADX;AAEIC,IAAAA,SAAS,EAAE,UAFf;AAGIC,IAAAA,GAAG,EAAE,UAHT;AAIIC,IAAAA,MAAM,EAAE,CAACC,IAAD,EAAOC,MAAP,kBACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,MAAM,CAACC,QAAP,CAAgBC,GAAhB,CAAoB,CAACD,QAAD,EAAWE,CAAX,kBACjB,oBAAC,GAAD;AAAK,MAAA,GAAG,EAAEA,CAAV;AAAa,MAAA,KAAK,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8BF,QAA9B,CADH,CADL;AALR,GANY,EAkBZ;AACIN,IAAAA,KAAK,EAAE,OADX;AAEIC,IAAAA,SAAS,EAAE,OAFf;AAGIC,IAAAA,GAAG,EAAE;AAHT,GAlBY,EAuBZ;AACIF,IAAAA,KAAK,EAAE,MADX;AAEIG,IAAAA,MAAM,EAAE,CAACC,IAAD,EAAOC,MAAP,kBACJ,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAMI,aAAa,CAACJ,MAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAHR,GAvBY,CAAhB;;AAiCA,QAAMI,aAAa,GAAGJ,MAAM,IAAI;AAC5BT,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,IAAAA,eAAe,CAACO,MAAD,CAAf;AACH,GAHD;;AAKA,QAAMK,QAAQ,GAAGC,MAAM,IAAI;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAf,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH,GAHD;;AAKA,MAAIF,WAAW,KAAKoB,SAApB,EAA+B;AAC3B,WAAO,IAAP;AACH;;AACD,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,KAAK,EAAC,gBADV;AAEI,IAAA,OAAO,EAAEnB,QAFb;AAGI,IAAA,MAAM,EAAE,IAHZ;AAII,IAAA,QAAQ,EAAE,MAAMC,WAAW,CAAC,KAAD,CAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI,oBAAC,IAAD;AACI,IAAA,QAAQ,EAAEc,QADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI,oBAAC,IAAD,CAAM,IAAN;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,KAAK,EAAC,OAFV;AAGI,IAAA,YAAY,EAAEb,YAAY,CAACkB,KAAb,IAAsB,EAHxC;AAII,IAAA,KAAK,EAAE,CACH;AACIC,MAAAA,QAAQ,EAAE,IADd;AAEIC,MAAAA,OAAO,EAAE;AAFb,KADG,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAWI,oBAAC,WAAD;AACI,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KADX;AAEI,IAAA,GAAG,EAAE,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CAHJ,eAmBI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CADJ,CAnBJ,CANJ,CADJ,eAmCI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAC,IAAd;AAAmB,IAAA,OAAO,EAAEnB,OAA5B;AAAqC,IAAA,UAAU,EAAEL,WAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnCJ,CAFJ,CADJ;AA0CH,CA7FD;;AA+FA,MAAMyB,eAAe,GAAIC,KAAD,KAAY;AAChC1B,EAAAA,WAAW,EAAE0B,KAAK,CAACC,SAAN,CAAgBC,OAAhB,CAAwBC;AADL,CAAZ,CAAxB;;AAIA,eAAehC,OAAO,CAClBF,OAAO,CAAC8B,eAAD,CADW,EAElB7B,gBAAgB,CAAC,CAAC;AAAEkC,EAAAA,UAAU,EAAE;AAAd,CAAD,CAAD,CAFE,CAAP,CAGb/B,UAHa,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Form, InputNumber, Modal, PageHeader, Row, Table, Tag } from \"antd\";\nimport { EditOutlined } from '@ant-design/icons';\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport Container from \"../../common/container\";\n\nconst Inventario = ({ productData }) => {\n\n    const [showEdit, setShowEdit] = useState(false);\n    const [selectedItem, setSelectedItem] = useState({});\n\n    const columns = [\n        {\n            title: \"Name\",\n            dataIndex: \"name\",\n            key: \"name\",\n        },\n        {\n            title: \"Category\",\n            dataIndex: \"category\",\n            key: \"category\",\n            render: (text, record) => (\n                <div>\n                    {record.category.map((category, i) =>\n                        <Tag key={i} color=\"magenta\">{category}</Tag>\n                    )}\n                </div>\n            )\n        },\n        {\n            title: \"Stock\",\n            dataIndex: \"stock\",\n            key: \"stock\",\n        },\n        {\n            title: \"Edit\",\n            render: (text, record) => (\n                <Button onClick={() => editInventory(record)}>\n                    <EditOutlined />\n                </Button>\n            ),\n        },\n    ];\n\n    const editInventory = record => {\n        setShowEdit(true);\n        setSelectedItem(record);\n    }\n\n    const onFinish = values => {\n        console.log(values);\n        setShowEdit(false);\n    }\n\n    if (productData === undefined) {\n        return null;\n    }\n    return (\n        <div>\n            <PageHeader title=\"Inventario\" />\n            <Container>\n                <Modal\n                    title=\"Edit inventory\"\n                    visible={showEdit}\n                    footer={null}\n                    onCancel={() => setShowEdit(false)}\n                >\n                    <Form\n                        onFinish={onFinish}\n                    >\n                        <Form.Item\n                            name=\"stock\"\n                            label=\"Stock\"\n                            initialValue={selectedItem.stock || \"\"}\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"Please input stock!\",\n                                },\n                            ]}\n                        >\n                            <InputNumber\n                                style={{ minWidth: 150 }}\n                                min={0}\n                            />\n                        </Form.Item>\n                        <Form.Item>\n                            <Row justify=\"end\">\n                                <Button type=\"primary\" htmlType=\"submit\">\n                                    Submit\n                                </Button>\n                            </Row>\n                        </Form.Item>\n                    </Form>\n                </Modal>\n                <Table rowKey='id' columns={columns} dataSource={productData} />\n            </Container>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    productData: state.firestore.ordered.Products,\n});\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([{ collection: \"Products\" }])\n)(Inventario);\n"]},"metadata":{},"sourceType":"module"}