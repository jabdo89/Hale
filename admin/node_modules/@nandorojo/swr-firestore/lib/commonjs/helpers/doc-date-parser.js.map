{"version":3,"sources":["doc-date-parser.ts"],"names":["withDocumentDatesParsed","data","parseDates","doc","forEach","dateField","unparsedDate","parsedDate","toDate"],"mappings":"+SAAA,0DACA,2D,yyBAEO,QAASA,CAAAA,uBAAT,CACLC,IADK,CAELC,UAFK,CAGL,CACA,GAAMC,CAAAA,GAAG,kBAAQF,IAAR,CAAT,CACAC,UAAU,OAAV,EAAAA,UAAU,SAAV,QAAAA,UAAU,CAAEE,OAAZ,CAAoB,SAAAC,SAAS,CAAI,CAC/B,GAAI,MAAOA,CAAAA,SAAP,GAAqB,QAAzB,CAAmC,OAEnC,GAAMC,CAAAA,YAAY,CAAG,oBAAIH,GAAJ,CAASE,SAAT,CAArB,CACA,GAAIC,YAAJ,CAAkB,0BAChB,GAAMC,CAAAA,UAA4B,uBAAGD,YAAY,CAACE,MAAhB,+CAAG,0BAAAF,YAAY,CAAjD,CACA,GAAIC,UAAJ,CAAgB,CACd,qBAAIJ,GAAJ,CAASE,SAAT,CAAoBE,UAApB,EACD,CACF,CACF,CAVD,EAYA,MAAOJ,CAAAA,GAAP,CACD","sourcesContent":["import get from 'lodash.get'\nimport set from 'lodash.set'\n\nexport function withDocumentDatesParsed<Data extends object>(\n  data: Data,\n  parseDates?: (keyof Data | string)[]\n) {\n  const doc = { ...data }\n  parseDates?.forEach(dateField => {\n    if (typeof dateField !== 'string') return\n\n    const unparsedDate = get(doc, dateField)\n    if (unparsedDate) {\n      const parsedDate: Date | undefined = unparsedDate.toDate?.()\n      if (parsedDate) {\n        set(doc, dateField, parsedDate)\n      }\n    }\n  })\n\n  return doc\n}\n"]}